@page "/Account/ResendEmailConfirmation"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using PersonalFitnessApp.Data

@inject UserManager<PersonalFitnessAppUser> UserManager
@inject IEmailSender<PersonalFitnessAppUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Resend email confirmation</PageTitle>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #000;
        color: #FFD700;
    }
    h1, h2 {
        color: #FFD700;
        text-align: center;
    }

    .form-floating {
        margin-bottom: 20px;
    }

        .form-floating label {
            color: #FFD700;
        }

        .form-floating .form-control {
            background-color: #000;
            color: #FFD700;
            border: 2px solid #FFD700;
            border-radius: 5px;
        }

            .form-floating .form-control:focus {
                background-color: #000;
                color: #FFD700;
                border-color: #FFD700;
                box-shadow: 0 0 8px #FFD700;
            }

    .btn-primary {
        background-color: #FFD700;
        color: #000;
        border: 2px solid #FFD700;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
    }

        .btn-primary:hover {
            background-color: #000;
            color: #FFD700;
            border-color: #FFD700;
        }

    .text-danger {
        color: #FF6F6F;
    }

    .w-100 {
        width: 100%;
    }

    hr {
        border-color: #FFD700;
    }

    .row {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
    }

    .col-md-4 {
        background-color: #000;
        border: 2px solid #FFD700;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 0 15px #FFD700;
    }

    .text-success {
        color: #00FF00;
        text-align: center;
        margin-top: 15px;
        font-weight: bold;
    }
</style>

<h1>Resend email confirmation</h1>
<h2>Enter your email.</h2>
<hr />
<StatusMessage Message="@message" />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email" class="form-control" aria-required="true" placeholder="name@example.com" />
                <label for="email" class="form-label">Email</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Resend</button>
        </EditForm>
    </div>
</div>

@code {
    private string? message;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null)
        {
            message = "Verification email sent. Please check your email.";
            return;
        }

        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });
        await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        message = "Verification email sent. Please check your email.";
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
