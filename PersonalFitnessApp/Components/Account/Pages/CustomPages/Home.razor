@page "/Homepage"
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using PersonalFitnessApp.Data
@inject UserManager<PersonalFitnessAppUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject PersonalFitnessAppContext DbContext;
<PageTitle>Home</PageTitle>
<img class="logo" src="https://i.imgur.com/leuBtD5.png" alt="Profile Picture" />

<div class="homepage-container">
    <h1 class="welcome-message">Hey, @Name!</h1>
    <div class="links">
        <a href="Account/Manage">Settings</a>
        <a href="/feedback/index">View Feedback</a>
    </div>

    <div class="progress-section">
        <div align="left" class="progress-item">
            <label>Steps:</label>
            <progress value=@Steps max="5000"></progress>
            <span>@Steps / 5000 steps</span>
        </div>
        <div align="left" class="progress-item">
            <label>Calories:</label>
            <progress value=@Calories max="2000"></progress>
            <span>@Calories / 2000 kcal</span>
        </div>
    </div>

    <div class="action-links">
        <a href="trackingitems">Calories Tracker</a>
        <a href="workoutlogs/create">Customize Workouts</a>
        <a href="bookings">Book A Class</a>
        <AuthorizeView Roles="Administrator">
            <a href="AdminEdit">Edit Database</a>
        </AuthorizeView>
    </div>
</div>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #000;
        color: #fff;
        margin: 0;
        padding: 0;
    }

    .homepage-container {
        padding: 20px;
    }

    .logo {
        width: 150px;
        display: block;
    }

    .welcome-message {
        font-size: 2rem;
        color: #FFD700;
    }

    .links {
        margin-top: 10px;
    }

        .links a {
            font-size: 1rem;
            color: #FFD700;
            margin: 0 10px;
        }

            .links a:hover {
                text-decoration: blink;
            }

    .progress-section {
        margin: 30px 0;
        color:#FFD700;
    }

    .progress-item {
        margin-bottom: 20px;
    }

        .progress-item label {
            display: block;
            font-size: 1.2rem;
            color: #FFD700;
            margin-bottom: 5px;
        }

    progress {
        width: 70%;
        height: 25px;
        border-radius: 5px;
        margin-bottom: 5px;
    }

        progress::-webkit-progress-bar {
            background-color: #333;
            border-radius: 5px;
        }

        progress::-webkit-progress-value {
            background-color: #FFD700;
            border-radius: 5px;
        }

        progress::-moz-progress-bar {
            background-color: #FFD700;
            border-radius: 5px;
        }

    .action-links {
        margin-top: 20px;
    }

        .action-links a {
            display: inline-block;
            font-size: 1rem;
            color: #FFD700;
            text-decoration: none;
            margin: 10px;
            padding: 10px 20px;
            border: 2px solid #FFD700;
            border-radius: 5px;
            transition: all 0.3s ease-in-out;
        }

            .action-links a:hover {
                background-color: #FFD700;
                color: #000;
            }
</style>

@code {
    private string? Name;
    private int Steps;
    private int Calories;
    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;
        var appUser = await UserManager.GetUserAsync(user);
        Name = appUser.FirstName + " " + appUser.LastName;
        if (appUser.Steps == 0)
        {
            Random random = new Random();
            Steps = random.Next(0, 5001);
            appUser.Steps = Steps;
            await UserManager.UpdateAsync(appUser);
        }
        else
        {
            Steps = appUser.Steps;
        }
        Calories = appUser.Calories;
    }
}
