@page "/fooditems/details"
@using Microsoft.EntityFrameworkCore
@using PersonalFitnessApp.Domain
@using PersonalFitnessApp.Data
@inject PersonalFitnessAppContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #000;
        color: #fff;
        margin: 0;
        padding: 0;
    }

    .page-title {
        text-align: center;
        font-size: 2.5rem;
        margin: 20px 0;
        color: #FFD700;
    }

    .details-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #111;
        border-radius: 8px;
        border: 3px solid #FFD700;
        box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1);
    }

    .gold-line {
        border: none;
        height: 2px;
        background-color: #FFD700;
        margin: 10px 0;
    }

    .loading-message {
        text-align: center;
        font-size: 1.2rem;
        color: #FFD700;
    }

    .details-list {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 10px;
        color: #eee;
    }

        .details-list dt {
            font-weight: bold;
            color: #FFD700 !important;
        }

        .details-list dd {
            margin: 0;
            color: #FFD700 !important;
        }


    .action-links {
        margin-top: 20px;
        text-align: center;
    }

    .action-link {
        text-decoration:none;
        color: #FFD700;
        border: 2px solid #FFD700;
        padding: 10px 20px;
        font-weight: bold;
        border-radius: 5px;
        background-color: #000;
        transition: transform 0.3s ease, background-color 0.3s ease;
    }

        .action-link:hover {
            background-color: #FFD700;
            color: #000;
        }
</style>

<h1 class="page-title">Details</h1>

<div class="details-container">
    <h2 style="color:#FFD700">FoodItem</h2>
    <hr class="gold-line" />
    @if (fooditem is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="details-list">
            <dt>Name</dt>
            <dd>@fooditem.Name</dd>
            <dt>Calories</dt>
            <dd>@fooditem.Calories</dd>
            <dt>Carbohydrates</dt>
            <dd>@fooditem.Carbohydrates</dd>
            <dt>Protein</dt>
            <dd>@fooditem.Protein</dd>
            <dt>Fibre</dt>
            <dd>@fooditem.Fibre</dd>
        </dl>
        <div class="action-links">
            <a class="action-link" href="@($"/fooditems/edit?id={fooditem.Id}")">Edit</a>
            <a class="action-link"href="@($"/fooditems")">Back to List</a>
        </div>
    }
</div>

@code {
    private FoodItem? fooditem;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var context = DbContext;
        fooditem = await context.FoodItem.FirstOrDefaultAsync(m => m.Id == Id);

        if (fooditem is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
