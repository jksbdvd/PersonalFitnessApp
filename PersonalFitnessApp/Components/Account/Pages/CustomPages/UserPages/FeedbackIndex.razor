@page "/feedback/index"
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using PersonalFitnessApp.Data
@using PersonalFitnessApp.Domain
@inject NavigationManager NavigationManager
@inject PersonalFitnessAppContext DbContext
@inject UserManager<PersonalFitnessAppUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>View Feedback</PageTitle>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 20px;
        background-color: #000;
        color: #FFD700;
    }

    .container {
        width: 80%;
        margin: auto;
        padding: 20px;
        border: 1px solid #FFD700;
        border-radius: 8px;
        background-color: #111;
    }

    .feedback-item {
        border-bottom: 1px solid #FFD700;
        padding: 10px;
    }

        .feedback-item:last-child {
            border-bottom: none;
        }

    .feedback-message {
        font-size: 16px;
        color: #FFD700;
    }

    .feedback-date {
        font-size: 14px;
        color: #FFD700;
    }

    .btn {
        display: block;
        margin: 20px auto;
        padding: 10px 20px;
        font-size: 18px;
        background-color: #FFD700;
        color: #000;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-align: center;
    }

        .btn:hover {
            background-color: #e0c300;
            transform: scale(1.05);
        }

    a {
        color: #FFD700;
        text-decoration: none;
    }

        a:hover {
            color: #e0c300;
        }
</style>

<div class="container">
    <h2 class="feedback-title">Feedback</h2>

    @foreach (var feedback in feedbackList)
    {
        <div class="feedback-item">
            <div class="feedback-item">
                <p class="feedback-message">@(feedback.Message + " - " + feedback.GiverName)</p>
                <p class="feedback-date">@feedback.GivenDate.ToString("f")</p>
                <AuthorizeView Roles="Administrator,Coach">
                    <p class="feedback-date">@feedback.UserId</p>
                </AuthorizeView>
            </div>
        </div>
    }
    <AuthorizeView Roles="Administrator,Coach">
        <a class="btn" href="/feedback">Give Feedback</a>
    </AuthorizeView>
</div>

@code {
    private List<Feedback> feedbackList { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = await UserManager.GetUserAsync(authenticationState.User);
        feedbackList =
            authenticationState.User.IsInRole("Administrator") ? DbContext.Feedback.ToList()
                                  : DbContext.Feedback.Where(f => f.UserId == user.Id).ToList();
    }
}
