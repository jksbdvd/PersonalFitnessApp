@page "/workoutlogs/details"
@using Microsoft.EntityFrameworkCore
@using PersonalFitnessApp.Domain
@using PersonalFitnessApp.Data
@inject PersonalFitnessAppContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #000;
        color: #fff;
        margin: 0;
        padding: 0;
    }

    h1 {
        text-align: center;
        color: #FFD700;
        font-size: 2.5rem;
        margin: 20px 0;
    }

    h2 {
        color: #FFD700;
        font-size: 2rem;
        margin: 10px 0;
    }

    hr {
        border: none;
        height: 2px;
        background-color: #FFD700;
        margin: 10px 0;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        margin: 10px 0;
    }

    .col-sm-2 {
        font-weight: bold;
        color: #FFD700;
        flex: 0 0 20%;
        padding: 5px;
    }

    .col-sm-10 {
        color: #FFD700;
        flex: 0 0 80%;
        padding: 5px;
    }

    a {
        color: #FFD700;
        text-decoration: none;
        margin-right: 10px;
        transition: color 0.3s ease;
    }

        a:hover {
            color: #000;
            background-color: #FFD700;
            padding: 5px;
            border-radius: 5px;
        }
    .authorize {
        display: inline-block;
        margin-top: 10px;
    }

    .back-link, .edit-link {
        color: #FFD700;
        text-decoration: none;
        border: 2px solid #FFD700;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: bold;
        display: inline-block;
        text-align: center;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .back-link:hover, .edit-link:hover {
            background-color: #FFD700;
            color: #000;
        }

    .back-link {
        margin-top: 20px;
    }

    .edit-link {
        margin-top: 10px;
    }

</style>

<h1>Details</h1>

<div>
    <h2>WorkoutLog</h2>
    <hr />
    @if (workoutlog is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Date</dt>
            <dd class="col-sm-10">@workoutlog.Date</dd>
            <dt class="col-sm-2">Exercise</dt>
            <dd class="col-sm-10">@workoutlog.Exercise</dd>
            <dt class="col-sm-2">Duration</dt>
            <dd class="col-sm-10">@workoutlog.Duration.ToString("HH:mm:ss") </dd>
            <dt class="col-sm-2">CaloriesBurnt</dt>
            <dd class="col-sm-10">@workoutlog.CaloriesBurnt</dd>
            <AuthorizeView Roles="Administrator">
                <dt class="col-sm-2">UserId</dt>
                <dd class="col-sm-10">@workoutlog.UserId</dd>
            </AuthorizeView>
        </dl>
        <div>
            <AuthorizeView Roles="Administrator">
                <a href="@($"/workoutlogs/edit?id={workoutlog.Id}")" class="edit-link">Edit</a>
            </AuthorizeView>
            <a href="@($"/workoutlogs")" class="back-link">Back to List</a>
        </div>
    }
</div>

@code {
    private WorkoutLog? workoutlog;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var context = DbContext;
        workoutlog = await context.WorkoutLog.FirstOrDefaultAsync(m => m.Id == Id);

        if (workoutlog is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
